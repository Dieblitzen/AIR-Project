
  def visualize_data(self):
    """
    Provides a visualization of the OSM and image data in DataPipeline.download_path
    """

    bboxes = []
    # Open pickle file with osm data
    with open(f"{DataPipeline.download_path}/{DataPipeline.osm_filename}", "rb") as filename:
      bboxes = pickle.load(filename)

    im_arr = []
    # Open pickle file with image array
    with open(f"{DataPipeline.download_path}/{DataPipeline.im_arr_filename}", "rb") as filename:
      im_arr = pickle.load(filename)

    plt.imshow(im_arr)
    for building_coords in bboxes:
      poly = Polygon(building_coords)
      x, y = poly.exterior.xy
      plt.plot(x, y)
    
    # # Add the grid
    # ax.grid(which='major', axis='both', linestyle='-')
    # ax.show()
    plt.grid()
    # plt.xticks(np.arange(0, 6000, 228), range(0, 23))
    # plt.yticks(np.arange(0, 6000, 228), range(0, 23))
    plt.show()
    

  def visualize_tiles(self):
    """
    Provides a visualization of the OSM and tiled data
    """

    tiles_and_boxes = []

    with open(f"{DataPipeline.download_path}/{DataPipeline.tiles_filename}", "rb") as filename:
      tiles_and_boxes = pickle.load(filename)
    
    for (tile, buildings) in tiles_and_boxes:
      plt.imshow(tile)

      for building_coords in buildings:
        poly = Polygon(building_coords)
        x, y = poly.exterior.xy
        plt.plot(x, y)
    
      plt.show()